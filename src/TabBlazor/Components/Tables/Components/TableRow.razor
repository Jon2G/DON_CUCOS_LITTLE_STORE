@typeparam TableItem
@inherits TableRowBase<TableItem>

<tr class="@GetRowCssClass(Item) data-row">
    @if (Table.ShowCheckboxes)
    {
        <td style="width:1%" @onkeydown="@(Table.KeyboardNavigation ? (e) => OnKeyDown(e, tableCells[0]): null)" @ref="tableCells[0]">
            <Checkbox Value="IsSelected(Item)" ValueChanged="(() => Table.SetSelectedItem(Item))" />
        </td>
    }

    @{
        var i = 1;
        @foreach (IColumn<TableItem> column in Table.VisibleColumns)
        {
            var j = i;
            <td style="@GetColumnWidth(column)" class="@GetColumnClass(column)" @onclick="RowClick" @onkeydown="@(Table.KeyboardNavigation ? (e) => OnKeyDown(e, tableCells[j]): null)" @ref="tableCells[j]">
                @if (column.Template != null)
                {
                    @column.Template(Item)
                }
                else if (column.Property != null)
                {
                    @column.GetValue(Item);
                }
            </td>

            i++;
        }
    }

    @if (Table.HasRowActions)
    {
        <td>
            <div class="row-action">

                @if (Table.RowActionTemplate != null)
                {
                    @Table.RowActionTemplate(Item)
                }

                @if (Table.AllowEdit)
                {
                    <Icon OnClick="Edit" class="cursor-pointer icon" Elements="@InternalIcons.Edit" />
                }

                @if (Table.AllowDelete)
                {
                    <Icon OnClick="Delete" class="cursor-pointer icon" Elements="@InternalIcons.Trash" />
                }
            </div>
        </td>
    }

</tr>