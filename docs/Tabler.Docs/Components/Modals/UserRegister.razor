@using Microsoft.AspNetCore.Components
@using Tabler.Docs.Components.Icons
@using Tabler.Docs.Interfaces
@using Tabler.Docs.ViewModels
@inject UsuarioViewModel Model
<div class="row">
    <div class="col-lg-12">
        <div class="mb-3">
            <div class="row">
                <div class="example-centered">
                    <div class="mb-3">
                        <label class="form-label">Imagen de usuario*:</label>
                        <div style="margin: 5px; display: inline-grid;width:100%">
                            <div style="margin: 5px;display: block;margin-left: auto;margin-right: auto;width: auto;">
                                <img src="@Model.Usuario.Imagen" style="vertical-align:middle;width:150px;height:150px;border-radius:50%">
                                </div>
                                <InputFile OnChange="OnInputFileChange" multiple />
                            </div>

                        </div>
                </div>
                <div class="example-centered">
                    <div class="mb-3">
                        <label class="form-label">NickName*:</label>
                        <input type="text" class="form-control" @bind="Model.Usuario.Nickname">
                    </div>
                </div>
                <div class="example-centered">
                    <div class="mb-3">
                        <label class="form-label">Nombre*:</label>
                        <input type="text" class="form-control" @bind="Model.Usuario.Name">
                    </div>
                </div>
                <div class="example-centered">
                    <div class="mb-3">
                        <label class="form-label">Password*:</label>
                        <input type="password" class="form-control" @bind="Model.Usuario.Password">
                    </div>
                </div>
                <div class="example-centered">
                    <div class="mb-3">
                        <label class="form-label">Key*:</label>
                        <input type="text" readonly class="form-control" @bind="Model.Usuario.Key_Id">
                    </div>
                </div>

            </div>
        </div>
    </div>

</div>


<div class="modal-footer">
    <a @onclick="Cancel" class="btn btn-link link-secondary" data-dismiss="modal">
        Cancelar
    </a>
    <a @onclick="Confirm" class="btn btn-primary ms-auto" data-dismiss="modal">
        <Icon class="icon" Elements="@DemoIcons.Circle_plus" />
        Confirmar
    </a>
</div>
@using System.IO
@using Kit.Extensions
@inject IModalService ModalService
@code {
    [Parameter] public int CustomerId { get; set; }
    private async Task Confirm()
    {

        var result = await ModalService.ShowAsync($"Confirme alta",
            new RenderComponent<DialogTest>().Set(x => x.Line1, "¿Dar de alta este cliente"),
            new ModalOptions { StatusColor = TablerColor.Danger, BlurBackground = false });

        if (!result.Cancelled)
        {
            if (CustomerId != 0)
            {
                //Model.Customer.Save(CustomerId);
            }
            else
            {
                //Model.Customer.Save();
            }
            ModalService.Close(ModalResult.Ok());
        }
    }

    private void Cancel()
    {
        ModalService.Close(ModalResult.Cancel());
    }

    IReadOnlyList<IBrowserFile> selectedFiles;
    private void OnInputFileChange(InputFileChangeEventArgs e)
    {
        selectedFiles = e.GetMultipleFiles();
        this.StateHasChanged();
        OnSubmit();
    }
    private async void OnSubmit()
    {
        if (selectedFiles?.Any() ?? false)
        {
            var file = selectedFiles.First();
            using (Stream stream = file.OpenReadStream())
            {
                Model.Usuario.Imagen = await stream.ToImageString();
            }
        }
        this.StateHasChanged();
    }
}
