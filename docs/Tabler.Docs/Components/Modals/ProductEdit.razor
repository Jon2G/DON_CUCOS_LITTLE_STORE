@using Microsoft.AspNetCore.Components
@using Tabler.Docs.Components.Icons
@using Tabler.Docs.Interfaces
@using Tabler.Docs.Models
@using Tabler.Docs.ViewModels
@*<div class="mb-3">
    <label class="form-label">Name</label>
    <input type="text" class="form-control" name="example-text-input" @bind-value="@ProductId" placeholder="Your report name">
</div>*@
@*<div class="form-selectgroup-boxes row mb-3">
    <div class="col-lg-6">
        <label class="form-selectgroup-item">
            <input type="radio" name="report-type" value="1" class="form-selectgroup-input" checked="">
            <span class="form-selectgroup-label d-flex align-items-center p-3">
                <span class="me-3">
                    <span class="form-selectgroup-check"></span>
                </span>
                <span class="form-selectgroup-label-content">
                    <span class="form-selectgroup-title strong mb-1">Simple</span>
                    <span class="d-block text-muted">Provide only basic data needed for the report</span>
                </span>
            </span>
        </label>
    </div>
    <div class="col-lg-6">
        <label class="form-selectgroup-item">
            <input type="radio" name="report-type" value="1" class="form-selectgroup-input">
            <span class="form-selectgroup-label d-flex align-items-center p-3">
                <span class="me-3">
                    <span class="form-selectgroup-check"></span>
                </span>
                <span class="form-selectgroup-label-content">
                    <span class="form-selectgroup-title strong mb-1">Advanced</span>
                    <span class="d-block text-muted">Insert charts and additional advanced analyses to be inserted in the report</span>
                </span>
            </span>
        </label>
    </div>
</div>*@
<div class="row">
    <div class="col-lg-8">
        <div class="mb-3">
            <div class="row">
                <div class="col-lg-6">
                    <div class="mb-3">
                        <label class="form-label">Código de producto*:</label>
                        <div style="display: flex">
                            <input type="text" class="form-control" style="margin-right: 5px;">
                            <Button BackgroundColor="TablerColor.Info">
                                <Icon class="icon" Elements="@DemoIcons.Search" />
                            </Button>
                        </div>
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="mb-3">
                        <label class="form-label">Nombre*:</label>
                        <input type="text" class="form-control">
                    </div>
                </div>

                <div class="col-lg-6">
                    <div class="mb-3">
                        <label class="form-label">Precio*:</label>
                        <input type="text" class="form-control">
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="mb-3">
                        <label class="form-label">Unidad*:</label>
                        <input type="text" class="form-control">
                    </div>
                </div>

                <div class="col-lg-6">
                    <div class="mb-3">
                        <label class="form-label">Proveedor*:</label>
                        <input type="text" class="form-control">
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="mb-3">
                        <label class="form-label">Existencia inicial*:</label>
                        <input type="text" class="form-control">
                    </div>
                </div>


            </div>
        </div>
    </div>
    <div class="col-lg-4">
        <div class="mb-3">
            <label class="form-label">Imagen*:</label>
            <div class="card" style="margin: 5px;">
                <img @onclick="ChangePicture" src="https://picsum.photos/200/300" alt="@Model.Product.Name" style="height: 200px;">
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="row">
        <div class="col-lg-4">
            <div class="mb-3">
                <label class="form-label">Mínimo*:</label>
                <input type="text" class="form-control">
            </div>
        </div>
        <div class="col-lg-4">
            <div class="mb-3">
                <label class="form-label">Máximo*:</label>
                <input type="text" class="form-control">
            </div>
        </div>
        <div class="col-lg-4">
            <div class="mb-3">
                <label class="form-label">Linea*:</label>
                <div style="display: flex">
                    <select class="form-select" style="margin-right: 5px;">
                        <option value="1" selected="">Private</option>
                        <option value="2">Public</option>
                        <option value="3">Hidden</option>
                    </select>
                    <Button BackgroundColor="TablerColor.Green">
                        <Icon class="icon" Elements="@InternalIcons.Circle_plus" />
                    </Button>
                </div>
            </div>
        </div>
    </div>

    <div class="col-lg-12">
        <div>
            <label class="form-label">Descripción*:</label>
            <textarea class="form-control" rows="3"></textarea>
        </div>
    </div>
 

</div>


<div class="modal-footer">
    <a @onclick="Cancel" class="btn btn-link link-secondary" data-dismiss="modal">
        Cancelar
    </a>
    <a @onclick="Confirm" class="btn btn-primary ms-auto" data-dismiss="modal">
        <Icon class="icon" Elements="@DemoIcons.Plus" />
        Confirmar
    </a>
</div>

@inject EditProductViewModel Model
@inject IModalService ModalService
@code {

    protected override async Task OnInitializedAsync()
    {
        await Model.RequestLoad(ProductId);
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        Model.Refreshed += Refreshed;
    }

    private void Refreshed(object sender, EventArgs e)
    {
        (sender as IRefresh).Refreshed -= Refreshed;
        StateHasChanged();
    }

    protected async Task ChangePicture()
    {
      
    }

    [Parameter] public string ProductId { get; set; }

    private async Task Confirm()
    {
        
        var result = await ModalService.ShowAsync($"Editar: {Model.Product.Name}", 
            new RenderComponent<DialogTest>().Set(x=>x.Line1,"¿Editar este artículo?"),
            new ModalOptions { StatusColor = TablerColor.Danger, BlurBackground = false });
        
        if (!result.Cancelled)
        {
            ModalService.Close(ModalResult.Ok());
        }
    }

    private void Cancel()
    {
        ModalService.Close(ModalResult.Cancel());
    }

}


