@using Microsoft.AspNetCore.Components
@using Tabler.Docs.Components.Icons
@using Tabler.Docs.Interfaces
@using Tabler.Docs.Models
@using Tabler.Docs.ViewModels
<div class="row">
    <div class="col-lg-8">
        <div class="mb-3">
            <div class="row">
                <div class="col-lg-6">
                    <div class="mb-3">
                        <label class="form-label">Código de producto*:</label>
                        <div style="display: flex">
                            <input type="text" class="form-control" style="margin-right: 5px;" @bind="Model.Product.Codigo" >
                            <Button BackgroundColor="TablerColor.Info">
                                <Icon class="icon" Elements="@DemoIcons.Search" />
                            </Button>
                        </div>
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="mb-3">
                        <label class="form-label">Nombre*:</label>
                        <input type="text" class="form-control" @bind="Model.Product.Nombre"  />
                    </div>
                </div>

                <div class="col-lg-6">
                    <div class="mb-3">
                        <label class="form-label">Precio*:</label>
                        <input type="text" class="form-control" @bind="Model.Product.Precio" >
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="mb-3">
                        <label class="form-label">Unidad*:</label>
                        <input type="text" class="form-control" @bind="Model.Product.Unidad" >
                    </div>
                </div>

                <div class="col-lg-6">
                    <div class="mb-3">
                        <label class="form-label">Proveedor*:</label>
                        <input type="text" class="form-control" @bind="Model.Product.Proveedor" >
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="mb-3">
                        <label class="form-label">Existencia inicial*:</label>
                        <input type="text" class="form-control" @bind="Model.Product.Existencia" >
                    </div>
                </div>


            </div>
        </div>
    </div>
    <div class="col-lg-4">
        <div class="mb-3">
            <label class="form-label">Imagen*:</label>
            <div class="card" style="margin: 5px;">
                <img @onclick="ChangePicture" src="@Model.Product.Imagen" alt="@Model.Product.Nombre" style="height: 200px;">
                <InputFile OnChange="OnInputFileChange" multiple />
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="row">
        <div class="col-lg-4">
            <div class="mb-3">
                <label class="form-label">Mínimo*:</label>
                <input type="text" class="form-control" @bind="Model.Product.Minimo" >
            </div>
        </div>
        <div class="col-lg-4">
            <div class="mb-3">
                <label class="form-label">Máximo*:</label>
                <input type="text" class="form-control" @bind="Model.Product.Maximo" >
            </div>
        </div>
        <div class="col-lg-4">
            <div class="mb-3">
                <label class="form-label">Linea*:</label>
                <div style="display: flex">
                    <select class="form-select" style="margin-right: 5px;" @bind="Model.Product.Clasificacion" >
                        @foreach (Category category in Model.Categories)
                        {
                            <option value="@category.Id">@category.Descripcion</option>
                        }
                    </select>
                    <Button BackgroundColor="TablerColor.Green" OnClick="AddCategory">
                        <Icon class="icon" Elements="@InternalIcons.Circle_plus" />
                    </Button>
                </div>
            </div>
        </div>
    </div>

    <div class="col-lg-12">
        <div>
            <label class="form-label">Descripción*:</label>
            <textarea class="form-control" rows="3" @bind="Model.Product.Descripcion" ></textarea>
        </div>
    </div>
 

</div>


<div class="modal-footer">
    <a @onclick="Cancel" class="btn btn-link link-secondary" data-dismiss="modal">
        Cancelar
    </a>
    <a @onclick="Confirm" class="btn btn-primary ms-auto" data-dismiss="modal">
        <Icon class="icon" Elements="@DemoIcons.Plus" />
        Confirmar
    </a>
</div>

@inject EditProductViewModel Model
@inject IModalService ModalService
@code {

    protected override async Task OnInitializedAsync()
    {
        await Model.RequestLoad(ProductId);
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        Model.Refreshed += Refreshed;
    }

    private void Refreshed(object sender, EventArgs e)
    {
        (sender as IRefresh).Refreshed -= Refreshed;
        StateHasChanged();
    }

    protected async Task ChangePicture()
    {


    }

    [Parameter] public string ProductId { get; set; }

    private async Task FindProduct()
    {

    }
    private async Task AddCategory()
    {

    }
    private async Task Confirm()
    {

        var result = await ModalService.ShowAsync($"Editar: {Model.Product.Nombre}",
            new RenderComponent<DialogTest>().Set(x=>x.Line1,"¿Editar este artículo?"),
            new ModalOptions { StatusColor = TablerColor.Danger, BlurBackground = false });

        if (!result.Cancelled)
        {
            ModalService.Close(ModalResult.Ok());
        }
    }

    private void Cancel()
    {
        ModalService.Close(ModalResult.Cancel());
    }

    private void OnInputFileChange(InputFileChangeEventArgs obj)
    {
        throw new NotImplementedException();
    }

}


