
<TreeView Items="@folders" ChildSelector="e=>e.SubFolders" DefaultExpanded="@(e=> e.FolderName.StartsWith("D"))" @bind-SelectedItems="selectedFolders">
    <Template>
        <Card StatusStart="TablerColor.Danger" Size="CardSize.Small">
            <CardBody>
                <span>@context.FolderName (@context.SubFolders.Count)</span>
            </CardBody>
        </Card>
    </Template>
</TreeView>


<div class="mt-3">Selected Folders:</div>
<ul>
    @foreach (var folder in selectedFolders)
    {
        <li>@folder.FolderName</li>
    }
</ul>
@code {

    List<FileFolder> folders = new List<FileFolder>();
    public List<FileFolder> selectedFolders { get; set; } = new List<FileFolder>();
    protected override void OnInitialized()
    {

        var drawings = new FileFolder("Drawings");

        var architecture = new FileFolder("Arcitecture");
        architecture.SubFolders.Add(new FileFolder("Folder1"));
        architecture.SubFolders.Add(new FileFolder("Folder2"));
        drawings.SubFolders.Add(architecture);

        drawings.SubFolders.Add(new FileFolder("HVAC"));
        drawings.SubFolders.Add(new FileFolder("Floorplans"));
        folders.Add(drawings);

        var documents = new FileFolder("Documents");
        documents.SubFolders.Add(new FileFolder("Instructions"));
        documents.SubFolders.Add(new FileFolder("History"));

        folders.Add(documents);
        folders.Add(new FileFolder("Images"));
    }

    public class FileFolder
    {
        public FileFolder() { }

        public FileFolder(string folderName)
        {
            FolderName = folderName;
        }

        public string FolderName { get; set; }
        public List<FileFolder> SubFolders { get; set; } = new List<FileFolder>();

    }

}
