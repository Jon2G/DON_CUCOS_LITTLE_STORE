@using Blazored.Typeahead

<TablerForm Model="order" >
    <ChildContent>
        <BlazoredTypeahead @bind-Value="order.Customer" SearchMethod="SearchCustomers" EnableDropDown>
            <ResultTemplate Context="customer">
                @customer.CustomerName
            </ResultTemplate>
            <SelectedTemplate Context="customer">
                @customer.CustomerName
            </SelectedTemplate>
        </BlazoredTypeahead>
        <ValidationMessage For=@( () => order.Customer ) />
    </ChildContent>
</TablerForm>


@if(order?.Customer != null)
{
    <div class="mt-3">
        Selected Order: @order.Customer.CustomerName (@order.OrderId)
    </div>
}


@code {

    private List<Customer> customers = SampleData.GetCustomers();
    private Order order = new Order();

    private async Task<IEnumerable<Customer>> SearchCustomers(string text)
    {
        return customers.Where(e => e.CustomerName.Contains(text, StringComparison.InvariantCultureIgnoreCase));
    }

    public class OrderContainer
    {
        public string Test { get; set; }
        public Order Order { get; set; } = new Order();
    }


}
