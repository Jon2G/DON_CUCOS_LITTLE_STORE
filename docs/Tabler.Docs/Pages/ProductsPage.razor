@page "/products"
@using Tabler.Docs.Components.Modals
@using Tabler.Docs.Interfaces
@using Tabler.Docs.Models
@using Tabler.Docs.ViewModels
@inject ProductsPageViewModel Model

<PagePretitle>
    Don cuco's
    <Icon class="align-text-top" Elements="@DemoIcons.Heart" TextColor="TablerColor.Red" Size="12" Filled />
    little store
</PagePretitle>

<Button Text="Nuevo producto" @onclick="() => ShowModal()" BackgroundColor="TablerColor.Info">
    <div>
        <span style="margin: 5px;">Nuevo producto</span>
        <Icon class="icon" Elements="@DemoIcons.Circle_plus" />
    </div>
</Button>

<h1>Productos</h1>


@if (Model.IsLoading)
{
    <Dimmer ShowSpinner="true" Active="Model.IsLoading">
        <p><em>Cargando...</em></p>
    </Dimmer>
}
else
{
    foreach (GroupLine line in Model.Lines)
    {
        if (line.Products.Any())
        {
            <Card Size="CardSize.Small">
                <CardBody class="d-flex align-items-center">
                    <span class="bg-blue text-white stamp me-3">
                        <Icon Elements="@DemoIcons.Building_warehouse" />
                    </span>
                    <div class="me-3 lh-sm">
                        <div class="strong">
                            @line.Category.Description
                        </div>
                        @*<div class="text-muted">12 waiting payments</div>*@
                    </div>
                </CardBody>
            </Card>
        }

        if (line.IsLoading)
        {
            <Dimmer ShowSpinner="true" Active="line.IsLoading">
                <p><em>Cargando...</em></p>
            </Dimmer>
        }
        else
        {
            <Row>
                @foreach (Product product in line.Products)
                {
                    <RowCol Sm="2">
                        <Card>
                            <div class="card" style="margin: 5px;">
                                <img src="@product.Picture" alt="@product.Name" style="height: 200px;">
                                <div class="container">
                                    <h4><b>@product.Name</b></h4>
                                    <p>@line.Category.Description</p>
                                    @if (!AppData.Current.User.Permissions.ReadOnly)
                                    {
                                        <Row style="margin: 5px;">
                                            <RowCol Sm="6">

                                                <Button @onclick="()=>ShowModal(product.Id)" BackgroundColor="TablerColor.Green">
                                                    <Icon class="icon" Elements="@DemoIcons.Pencil" />
                                                </Button>
                                            </RowCol>
                                            <RowCol Sm="6">
                                                <Button @onclick="()=>Delete(product.Id)" BackgroundColor="TablerColor.Danger">
                                                    <Icon class="icon" Elements="@DemoIcons.Trash" />
                                                </Button>
                                            </RowCol>
                                        </Row>
                                    }

                                </div>
                            </div>
                        </Card>
                    </RowCol>
                }
            </Row>

        }
    }
}



@code {

    protected override async Task OnInitializedAsync()
    {
        await Model.Refresh();
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        Model.Refreshed += Refreshed;
    }

    private void Refreshed(object sender, EventArgs e)
    {
        (sender as IRefresh).Refreshed -= Refreshed;
        StateHasChanged();
    }

    private void LoadFiles(InputFileChangeEventArgs e)
    {

    }

    [Inject] IModalService ModalService { get; set; }

    protected async Task ShowModal()
    {
        await ShowModal(0);
    }
    protected async Task ShowModal(int ProductId)
    {
        string Tile = "Alta de productos";
        if (ProductId > 0)
        {
            Tile = "Edición de producto";
        }

        var component = new RenderComponent<ProductEdit>().Set(e => e.ProductId, ProductId);
        var result = await ModalService.ShowAsync(Tile, component, new ModalOptions { Size = ModalSize.Large });

        if (!result.Cancelled)
        {
            await this.Model.Refresh();
            StateHasChanged();
        }
    }

    private async void Delete(int productId)
    {
        Product product = await Product.GetById(productId);
        if (product is null) { return; }
        var result = await ModalService.ShowAsync(product.Name,
            new RenderComponent<DialogTest>().Set(x => x.Line1, "¿Eliminar este producto?")
                .Set(x => x.Line2, "Continuará mostrandose en reportes de ventas anteriores")
                .Set(x => x.Line3, "Esta acción no puede deshacerse"),
            new ModalOptions { StatusColor = TablerColor.Danger, BlurBackground = true });

        if (!result.Cancelled)
        {
            product.Disabled = true;
            product.Save();
            ModalService.Close(ModalResult.Ok());
            await Model.Refresh();
            StateHasChanged();
        }
    }

}



<Row class="mt-1 row-deck row-cards">
    <RowCol Sm="12" Md="6" Lg="3">
        <Tabler.Docs.Components.Snippets.Statistics.SmallSales />
    </RowCol>
    <RowCol Sm="12" Md="6" Lg="3">
        <Tabler.Docs.Components.Snippets.Statistics.SmallOrders />
    </RowCol>
    <RowCol Sm="12" Md="6" Lg="3">
        <Tabler.Docs.Components.Snippets.Statistics.SmallLikes />
    </RowCol>
    <RowCol Sm="12" Md="6" Lg="3">
        <Tabler.Docs.Components.Snippets.Statistics.SmallMembers />
    </RowCol>

    <RowCol Sm="12" Md="6" Lg="3">
        <Tabler.Docs.Components.Snippets.Statistics.StatisticsMedium />
    </RowCol>
    <RowCol Sm="12" Md="6" Lg="3">
        <Tabler.Docs.Components.Snippets.Statistics.StatisticsChart />
    </RowCol>
    <RowCol Sm="12" Md="6" Lg="3">
        <Tabler.Docs.Components.Snippets.Statistics.StatisticsLineChart />
    </RowCol>
    <RowCol Sm="12" Md="6" Lg="3">
        <Tabler.Docs.Components.Snippets.Statistics.StatisticsMedium />
    </RowCol>

    <RowCol Sm="12" Lg="6">
        <Tabler.Docs.Components.Snippets.Tables.CustomerList />
    </RowCol>

    <RowCol Sm="12" Lg="6">
        <Tabler.Docs.Components.Snippets.Tables.Orders />
    </RowCol>


</Row>

